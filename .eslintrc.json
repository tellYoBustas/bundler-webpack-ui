{
    "env": {
        "browser": true,
        "es6": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:sonarjs/recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "./tsconfig.json",
        "tsconfigRootDir": "."
    },
    "plugins": [
        "react",
        "sonarjs",
        "prettier",
        "react-hooks",
        "@typescript-eslint"
    ],
    "rules": {
        "prettier/prettier": ["error"],

        "no-shadow": ["error", { "builtinGlobals": true, "allow": ["screen"] }],
        "no-duplicate-imports": ["error", { "includeExports": true }],
        "no-template-curly-in-string": "error",
        "block-scoped-var": "error",
        "curly": ["error", "all"],
        "eqeqeq": "error",
        "max-classes-per-file": ["error", 1],
        "no-alert": "warn",
        "no-console": "warn",
        "no-else-return": ["error", { "allowElseIf": false }],
        "no-implicit-coercion": "error",
        "no-labels": "error",
        "no-lone-blocks": "error",
        "no-multi-spaces": "error",
        "no-new": "error",
        "no-new-func": "error",
        "no-new-wrappers": "error",
        "no-return-await": "error",
        "no-self-compare": "error",
        "no-sequences": "error",
        "no-throw-literal": "error",
        "no-unused-expressions": "error",
        "no-useless-call": "error",
        "no-useless-concat": "error",
        "no-useless-return": "error",
        "prefer-promise-reject-errors": "error",
        "radix": "error",
        "indent": ["error", 4],
        "no-undefined": "error",
        "array-bracket-newline": ["error", { "multiline": true }],
        "comma-dangle": ["error", "always-multiline"],
        "comma-style": "error",
        "eol-last": "error",
        "key-spacing": "error",
        "keyword-spacing": "error",
        "new-parens": "error",
        "no-bitwise": "warn",
        "no-lonely-if": "warn",
        "no-multiple-empty-lines": "error",
        "no-nested-ternary": "error",
        "no-new-object": "error",
        "no-tabs": ["error", { "allowIndentationTabs": true }],
        "no-trailing-spaces": "error",
        "no-unneeded-ternary": "error",
        "no-whitespace-before-property": "error",
        "object-curly-newline": "error",
        "object-curly-spacing": ["error", "always"],
        "semi-spacing": "error",
        "space-before-blocks": "error",
        "space-before-function-paren": [
            "error",
            {
                "anonymous": "always",
                "named": "never",
                "asyncArrow": "always"
            }
        ],
        "space-in-parens": "error",
        "space-infix-ops": "error",
        "space-unary-ops": "error",
        "spaced-comment": ["error", "always"],
        "switch-colon-spacing": "error",
        "arrow-body-style": ["error", "as-needed"],
        "arrow-parens": ["error", "as-needed"],
        "arrow-spacing": "error",
        "generator-star-spacing": ["error", "after"],
        "no-confusing-arrow": "error",
        "no-useless-computed-key": "error",
        "no-useless-rename": "error",
        "object-shorthand": ["error", "always"],
        "prefer-arrow-callback": "warn",
        "prefer-destructuring": "error",
        "rest-spread-spacing": ["error", "never"],
        "sort-imports": "error",
        "template-curly-spacing": "error",

        "@typescript-eslint/no-extra-parens": ["error"],
        "@typescript-eslint/semi": ["error", "never"],
        "@typescript-eslint/member-delimiter-style": ["error", { "multiline": { "delimiter": "none" } }],
        "@typescript-eslint/member-ordering": "warn",
        "@typescript-eslint/no-magic-numbers": [
        "error",
            {
                "ignoreNumericLiteralTypes": true,
                "ignoreEnums": true,
                "enforceConst": true,
                "ignoreReadonlyClassProperties": true,
                "ignore": [0, 24, 60, 1000]
            }
        ],
        "@typescript-eslint/brace-style": ["error", "1tbs"],
        "@typescript-eslint/quotes": ["error", "double", { "avoidEscape": true }],
        "@typescript-eslint/func-call-spacing": ["error", "never"],
        "@typescript-eslint/no-useless-constructor": "error",
        "@typescript-eslint/prefer-for-of": "warn",
        "@typescript-eslint/no-parameter-properties": "error",
        "@typescript-eslint/no-unnecessary-type-arguments": "warn",
        "@typescript-eslint/prefer-function-type": "warn",
        "@typescript-eslint/prefer-readonly": "warn",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/camelcase": "off",
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": "default",
                "format": ["camelCase"]
            },
            {
                "selector": "variable",
                "format": ["camelCase", "UPPER_CASE", "PascalCase"]
            },
            {
                "selector": "parameter",
                "format": ["camelCase"],
                "leadingUnderscore": "allow"
            },
            {
                "selector": "memberLike",
                "modifiers": ["private"],
                "format": ["camelCase"],
                "leadingUnderscore": "require"
            },
            {
                "selector": "typeLike",
                "format": ["PascalCase"]
            }
        ],
        "@typescript-eslint/explicit-function-return-type": ["error", { "allowExpressions": true }],
        "@typescript-eslint/interface-name-prefix": "off",
        "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_", "varsIgnorePattern": "^_$" }],

        "react/no-access-state-in-setstate": "error",
        "react/no-danger": "error",
        "react/no-multi-comp": "error",
        "react/no-this-in-sfc": "error",
        "react/prefer-stateless-function": "error",
        "react/jsx-filename-extension": ["error", { "extensions": [".tsx"] }],
        "react/jsx-no-bind": "error",
        "react/jsx-no-literals": "warn",
        "react/jsx-no-useless-fragment": "error",
        "react/jsx-pascal-case": "error",
        "react/react-in-jsx-scope": "off",

        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "warn"
    }
}
